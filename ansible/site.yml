- hosts: all
  become: true
  tasks:
    - name: change hostname
      hostname:
        name: "{{ inventory_hostname }}"

    # ssh config
    - block: 
      - name: check authorized_keys
        become: no
        local_action: command cat {{ inventory_dir }}/files/authorized_keys
        register: keys
        changed_when: false
      
      - name: insert authorized_keys for root
        blockinfile:
          path: ~/.ssh/authorized_keys
          block: "{{ keys.stdout }}"

      - name: insert authorized_keys for user
        blockinfile:
          path: "/home/{{ remote_user }}/.ssh/authorized_keys"
          owner: "{{ remote_user }}"
          group: "{{ remote_user }}"
          block: "{{ keys.stdout }}"
          create: yes
          mode: 0700

    - name: install common packages
      package:
        name: "{{ item }}"
        state: present
      with_items:
        - tcpdump
        - unzip
        - vim

    # alp
    - name: install alp
      unarchive:
        src: https://github.com/tkuchiki/alp/releases/download/v1.0.21/alp_linux_amd64.zip
        dest: /usr/local/bin/
        remote_src: yes
        creates: /usr/local/bin/alp

    # pt-query-digest
    - name: install percona-toolkit
      unarchive:
        src: https://downloads.percona.com/downloads/percona-toolkit/3.5.5/binary/tarball/percona-toolkit-3.5.5_x86_64.tar.gz
        dest: /usr/local/
        remote_src: yes
    - name: install percona-toolkit
      file:
        src: /usr/local/percona-toolkit-3.5.5/bin/pt-query-digest
        dest: /usr/local/bin/pt-query-digest
        state: link

    # netdata
    - name: check if netdata is installed
      command: which netdata
      ignore_errors: true
      register: netdata_executable
    - name: get netdata
      get_url:
        url: https://my-netdata.io/kickstart.sh
        dest: /tmp/netdata-kickstart.sh
        mode: '0755'
        force: true
      when: netdata_executable.rc != 0
    - name: install netdata
      command: "bash /tmp/netdata-kickstart.sh --dont-wait --non-interactive"
      when: netdata_executable.rc != 0

  roles:
    - role: newrelic.newrelic_install
  vars:
    targets:
      - infrastructure
      - logs
      - apm-nodejs
      - nginx
      - mysql
    remote_user: isucon
  environment:
    NEW_RELIC_API_KEY: "{{ NEW_RELIC_API_KEY }}"
    NEW_RELIC_ACCOUNT_ID: "{{ NEW_RELIC_ACCOUNT_ID }}"
    NEW_RELIC_REGION: "{{ NEW_RELIC_REGION }}"
    NEW_RELIC_MYSQL_ROOT_PASSWORD: "{{ NEW_RELIC_MYSQL_ROOT_PASSWORD }}"
